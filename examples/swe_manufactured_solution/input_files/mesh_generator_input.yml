#############################################################################
#
# Input for generating rectangular meshes
#
#############################################################################
# This input file can be used to reproduce the manufactured solutions and
# verify program correctness.
#
# This input file is used to generate rectangle with diagonally opposite
# vertices (x1,y1) and (x2,y2)

x1: 400
y1: 1000

x2: 100
y2: 700

# We then determine the number of element edges along each edge

num_x_subdivisions: 20
num_y_subdivisions: 20

# The next step is to determine the pattern
#  (0) simple pattern
#  (1) zigzag pattern
#  (2) checker pattern

pattern: 0

# The last step is to determine the boundary types
# The boundary types are
#  "land"
#  "tide"
#  "flow"
#
# Note that we require 4 edges be specified
#
# If you would like to use a tide or flow boundary you
# must additionally specify: frequency, forcing factor,
# and the equilibrium argument
# e.g.
#  - type: flow
#    frequency: 0
#    forcing_factor: 1
#    equilibrium_argument: 0

boundary:
  - type: land # (x1,y1)--(x2,y1)
  - type: land # (x2,y1)--(x2,y2)
  - type: land # (x1,y2)--(x2,y2)
  - type: land # (x1,y1)--(x1,y2)

# The generated output mesh will be written to the following (path)/file
# If this node is left empty, the default is set to recangular_mesh
# Note that the code with generate a {mesh_name}.14 and {mesh_name}.bcis

#mesh_name: path/to/mesh